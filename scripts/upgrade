#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get "$app" domain)
path_url=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)
final_path=$(ynh_app_setting_get "$app" final_path)
data_user=$(ynh_app_setting_get "$app" data_user)
version=$(ynh_app_setting_get "$app" version)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_print_info "Ensuring downward compatibilty..."

# Fix is_public as a boolean value
if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set "$app" is_public 1
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set "$app" is_public 0
	is_public=0
fi

# if final_path doesn't exist, create it
if [ -z "$final_path" ]; then
	final_path="/opt/yunohost/$app"
	ynh_app_setting_set "$app" final_path "$final_path"
fi

#=================================================
# CHECK VERSION
#=================================================

if [ -z "$version" ]
then
	version=$(grep '\"version\": ' ../manifest.json | cut -d '"' -f 4 | cut -d '~' -f 1)	# Retrieve the version number in the manifest file.
	ynh_app_setting_set "$app" version "$version"
fi


#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_print_info "Backing up the app before upgrading..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

path_url=$(ynh_normalize_url_path "$path_url")

#=================================================
# STANDARD UPAGRADE STEPS
#=================================================
# UPGRADE PACKAGE RADICALE
#=================================================
ynh_print_info "Stopping $app service ..."
yunohost service stop "$app"

ynh_print_info "Upgrading package $app..."
"$final_path/bin/pip3" install --upgrade "radicale==$version"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Uprading nginx web server configuration..."

ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_print_info "Upgrading dependencies..."

ynh_install_app_dependencies "$pkg_dependencies"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info "Making sure dedicated system user exist..."

ynh_system_user_create "$app"


#=================================================
# UPDATE CONFIGURATION
#=================================================
config_path="/etc/$app"
ynh_backup_if_checksum_is_different "$config_path/config"
ynh_store_file_checksum "$config_path/config"

ynh_backup_if_checksum_is_different "$config_path/logging"
ynh_store_file_checksum "$config_path/lggging"

ynh_backup_if_checksum_is_different "$config_path/radicale.env"
ynh_store_file_checksum "$config_path/radicale.env"

ynh_replace_string "__FINAL_PATH__" "$final_path" ../hooks/post_user_delete


#=================================================
# SETUP LOGROTATE
#=================================================
ynh_print_info "Upgrading logrotate configuration"
cp ../conf/logrotate "/etc/logrotate.d/$app"


#=================================================
# SETUP SYSTEMD
#=================================================
ynh_print_info "Upgrading systemd confguration ..."
ynh_add_systemd_config
ynh_replace_string "__FINAL_PATH__" "$final_path" "/etc/systemd/system/$app.service"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
chown -R root: "$final_path"

#=================================================
# PREPARE THE HOOKS
#=================================================

# Modification des hook pour la création des collections par défaut des nouveaux utilisateurs. Et leur suppression
ynh_replace_string "__DATA_USER__" "$data_user" ../hooks/post_user_delete
ynh_replace_string "__DATA_USER__" "$data_user" ../hooks/post_create_user
ynh_replace_string "__APP__" "$app" ../hooks/post_create_user

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Upgrading SSOwat configuration..."

#Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_app_setting_set "$app" unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX AND RESTART SERVICE
#=================================================
ynh_print_info "Starting $app service..."
ynh_replace_string "__PATH__" "$path_url" ../conf/nginx.conf

yunohost service start "$app"

ynh_print_info "Reloading nginx web server ..."
systemctl reload nginx

ynh_print_info "Upgrade of $app completed"


